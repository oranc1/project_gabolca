<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.project_gabolcar.mapper.CarItemMapper">

	<!-- 리뷰 관련 mapper.xml -->
	<!-- 리뷰 게시판 목록 -->

	<!-- 리뷰게시판 작은거 3개 -->
	<select id="getReviewListSmall" resultType="map" parameterType="com.itwillbs.project_gabolcar.vo.ReviewVO">
	select * from rev_car rc 
		where res_idx IN(
			select res_idx from res_info ri
				where car_idx in ( 
			select car_idx from car_info ci
				where car_model= #{car_model}
				)
			)
			ORDER BY rev_star DESC
			LIMIT 3
	</select>

	
	<!-- 리뷰게시판 목록 페이지 나누기 -->
	<select id="getReviewListPaging" resultType="com.itwillbs.project_gabolcar.vo.ReviewVO">
		SELECT * FROM (
	           	SELECT rc.rev_date, rc.rev_content, rc.rev_name, rc.rev_idx, rc.rev_star, rc.rev_subject, ci.car_model, 
	            date_format(rev_date, '%Y-%m-%d')AS rev_date_format 
	              FROM rev_car rc
	              	JOIN res_info ri
	              	ON rc.res_idx = ri.res_idx 
	              	JOIN car_info ci
	              	ON ri.car_idx = ci.car_idx 
              		) AS n1
						  <if test="!searchKeyword.equals('')">
							WHERE
							<choose>
								<when test="searchType.equals('subject')">
									rev_subject LIKE '%${searchKeyword}%'
								</when>
								<when test="searchType.equals('content')">
									rev_content LIKE '%${searchKeyword}%'
								</when>
								<when test="searchType.equals('subject_content')">
									rev_subject LIKE '%${searchKeyword}%'
									OR rev_content LIKE '%${searchKeyword}%'
								</when>
								<when test="searchType.equals('name')">
									rev_name LIKE '%${searchKeyword}%'
								</when>
								<when test="searchType.equals('star')">
									rev_star LIKE '%${searchKeyword}%'
								</when>
								<when test="searchType.equals('carModel')">
									car_model LIKE '%${searchKeyword}%'
								</when>
							</choose>
						</if>
					ORDER BY rev_idx DESC
	    			LIMIT 	#{startRow}, #{listLimit}
	</select>
	
	<!-- 리뷰 게시판 총 갯수 -->
	<select id="getTotal" resultType="int">
			SELECT COUNT(*) FROM (
	           	SELECT rc.rev_date, rc.rev_content, rc.rev_name, rc.rev_idx, rc.rev_star, rc.rev_subject, ci.car_model, 
	            date_format(rev_date, '%Y-%m-%d')AS rev_date_format 
	              FROM rev_car rc
	              	JOIN res_info ri
	              	ON rc.res_idx = ri.res_idx 
	              	JOIN car_info ci
	              	ON ri.car_idx = ci.car_idx 
              		) AS n1
				<if test="!searchKeyword.equals('')">
					WHERE
					<choose>
						<when test="searchType.equals('subject')">
							rev_subject LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('content')">
							rev_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('subject_content')">
							rev_subject LIKE '%${searchKeyword}%'
							OR rev_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('name')">
							rev_name LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('star')">
							rev_star LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('carModel')">
							car_model LIKE '%${searchKeyword}%'
						</when>
					</choose>
				</if>
	</select>
	
	<!-- 리뷰 게시판 뷰 -->
	<select id="reviewDetail" resultType="com.itwillbs.project_gabolcar.vo.ReviewVO">
		SELECT rc.rev_date, rc.rev_idx, rc.rev_star, rc.rev_subject, rc.rev_name, ci.car_model, 
		rc.rev_content, date_format(rev_date, '%Y-%m-%d')AS rev_date_format 
       		FROM rev_car rc
	       		JOIN res_info ri
	       		ON rc.res_idx = ri.res_idx 
	       		JOIN car_info ci
	       		ON ri.car_idx = ci.car_idx 
					WHERE rev_idx = #{rev_idx}
	</select>
	
	<delete id="deleteReview">
		DELETE
			FROM rev_car
				WHERE rev_idx = #{rev_idx}
	</delete>
	
	<insert id="insertReview">
		INSERT
			INTO rev_car
			VALUES (
				null,
				#{res_idx},
				#{rev_name},
				#{rev_subject},
				#{rev_content},
				#{rev_star},
				now()
			)
	</insert>
	
	<update id="modifyReview">
		UPDATE rev_car
			SET rev_subject = #{rev_subject},
				rev_content = #{rev_content},
				rev_star = #{rev_star}
					WHERE rev_idx = #{rev_idx}
	</update>
		
	<update id="updateIdx">
		UPDATE rev_car
			SET rev_idx = rev_idx - 1
			WHERE rev_idx > #{rev_idx}
	</update>
	
	
	<!-- 리뷰 게시판 끝 -->
	
	
	
	
	<!-- 차량 idx 에 해당하는 옵션들 불러오기 -->
	<select id="selectCarOptions" resultType="map">
		SELECT * FROM option_list ol 
		WHERE 
		option_idx in
		(
			SELECT option_idx 
			FROM car_options co 
			WHERE car_idx = #{car_idx}
		)
	</select>	
	
	
	<!-- 차량 소개 - 차량 정보 -->
	<select id="selectCarInfoList" resultType="map">
		select
			*
		from
			car_info
	</select>
	
	<!-- 차량 소개 - 각 차량에 등록된 옵션 -->
	<select id="selectCarOptionListInfo" parameterType="int" resultType="map">
	    SELECT ol.* FROM option_list ol
	    	INNER JOIN car_options co ON ol.option_idx = co.option_idx
	    	WHERE co.car_idx = #{carIdx}
	</select>
	
	
	
</mapper>
