<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itwillbs.project_gabolcar.mapper.QuestionMapper">
	<insert id="insertQuestionBoard">
		<selectKey keyProperty="qst_idx" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(qst_idx), 0) FROM qst_board
		</selectKey>
			INSERT 
				INTO qst_board
				VALUES (
					#{qst_idx} + 1
					, #{mem_idx}
					, #{mem_name}
					, #{qst_pass}
					, #{qst_subject}
					, #{qst_content}
					, #{qst_idx} + 1 -- qst_re_ref
					, 0
					, 0
					, 0 			 -- qst_readcount
					, now()
					, #{qst_type}		
				)
	</insert>
	
		<!-- 수정 중  -->
  <select id="getQstBoardListForMember" resultType="com.itwillbs.project_gabolcar.vo.QuestionVO" parameterType="map">
    SELECT *
    FROM qst_board
    
<!--     <where> -->
<!--         ( -->
<!--             mem_idx = #{mem_idx} -->
<!--             <if test="mem_idx == 1">OR mem_idx = 1</if> -->
<!--         ) -->
<!--         AND -->
<!--         ( -->
            <if test="!searchKeyword.equals('')">
                <choose>
 						<when test="searchType.equals('subject')">
							qst_subject LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('content')">
							qst_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('subject_content')">
							qst_subject LIKE '%${searchKeyword}%'
							OR qst_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('name')">
							mem_name LIKE '%${searchKeyword}%'
						</when>
                </choose>
            </if>
<!--         ) -->
<!--     </where> -->
    
    ORDER BY
        qst_board_re_ref DESC,
        qst_board_re_seq ASC
    LIMIT
        #{startRow},
        #{listLimit}
</select>
	
	
	<select id="selectQstBoardList" resultType="com.itwillbs.project_gabolcar.vo.QuestionVO">
			SELECT *
			FROM qst_board 
			
			<if test="!searchKeyword.equals('')">
					WHERE
					<choose>
						<when test="searchType.equals('subject')">
							qst_subject LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('content')">
							qst_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('subject_content')">
							qst_subject LIKE '%${searchKeyword}%'
							OR qst_content LIKE '%${searchKeyword}%'
						</when>
						<when test="searchType.equals('name')">
							mem_name LIKE '%${searchKeyword}%'
						</when>
					</choose>
			</if>
					ORDER BY 
						qst_board_re_ref DESC
						, qst_board_re_seq ASC
					LIMIT
						#{startRow}
						, #{listLimit}
	</select>
	
	
	<select id="selectQstBoardListCount" resultType="int">
		SELECT COUNT(*)
			FROM qst_board -- FROM 절 이후 작업 분기 일어남(= 동적 SQL문 작성 필요)
			<!-- 1. 검색어(searchKeyword)가 널스트링이 아닐 때 검색어 추가할 WHERE 절 수행, 아니면 생략 -->
			<if test="!searchKeyword.equals('')">
				WHERE
				<!-- 2. 검색타입(searchType)에 따른 WHERE 절 조건 대상 변경 -->
				<choose>
					<when test="searchType.equals('subject')">
						qst_subject LIKE CONCAT('%', #{searchKeyword} ,'%')
					</when>
					<when test="searchType.equals('content')">
						qst_content LIKE CONCAT('%', #{searchKeyword} ,'%')
					</when>
					<when test="searchType.equals('subject_content')">
						qst_subject LIKE CONCAT('%', #{searchKeyword} ,'%') 
						OR qst_content LIKE CONCAT('%', #{searchKeyword} ,'%') 
					</when>
					<when test="searchType.equals('name')">
						mem_name LIKE CONCAT('%', #{searchKeyword} ,'%')
					</when>
				</choose>
			</if>
	</select>
	
	<!-- 	글 상세정보 조회 - SELECT -->
	<select id="selectQuestionBoard" resultType="com.itwillbs.project_gabolcar.vo.QuestionVO">
		SELECT * 
			FROM qst_board
			WHERE
				qst_idx = #{qst_idx}
	</select>
	
	<!-- 게시물 조회수 증가 - UPDATE -->
	<update id="updateReadcount">
		<selectKey keyProperty="qst_readcount" resultType="int" order="AFTER">
			SELECT qst_readcount
				FROM qst_board
				WHERE
					qst_idx = #{qst_idx}
		</selectKey>
		UPDATE qst_board
			SET
				qst_readcount = qst_readcount + 1
			WHERE
				qst_idx = #{qst_idx}
	
	</update>
	
	<!-- 글 삭제 - DELETE -->
	<!-- 글번호가 일치하는 레코드 삭제 -->
	<delete id="qstDeleteBoard">
		DELETE
			FROM qst_board
			WHERE
				qst_idx = #{qst_idx}
	</delete>
	
	
	<!-- 작성자가 맞는 지 확인 -->
    <select id="getMemNameByIdx" resultType="String" parameterType="int">
        SELECT mem_name FROM mem_info WHERE mem_idx=#{mem_idx}
    </select>
    
    <!-- 작성자가 맞는 지 확인 -->
    <select id="getMemNameById" resultType="String" parameterType="String">
    	SELECT mem_name FROM mem_info WHERE mem_id=#{mem_id}
	</select>
	
	
	<!-- 추가 : 같은 qst_board_re_ref 값을 가진 게시물 목록 조회 -->
	<select id="selectRelatedQuestions" resultType="com.itwillbs.project_gabolcar.vo.QuestionVO">
	    SELECT *
	    FROM qst_board
	    WHERE
	        qst_board_re_ref = #{qst_board_re_ref}
	</select>
		
	
	<!-- 작성자 관리자 비교 폐기대상 -->
	<select id="getAdminQstReRef" resultType="int" parameterType="int">
	    SELECT qst_board_re_ref
	    FROM qst_board
	    WHERE qst_idx=#{qst_idx} AND mem_name='관리자'
	</select>
    
	<!-- 나중에 작성자 이름에 mem_name을 불러올때 쓰이는 구문 -->
<!-- SELECT qst_board.qst_idx, qst_board.mem_name, qst_board.qst_pass, qst_board.qst_subject, qst_board.qst_content, qst_board.qst_date, qst_board.qst_type, mem_info.mem_name  -->
<!-- FROM qst_board  -->
<!-- JOIN mem_info  -->
<!-- ON qst_board.mem_idx = mem_info.mem_idx; -->
	

	<!-- 답글 등록 전 순서번호 증가 -->
	<update id="updateQstBoardReSeq">
		UPDATE qst_board
		SET
			qst_board_re_seq = qst_board_re_seq + 1
		WHERE
			qst_board_re_ref = #{qst_board_re_ref}
			AND qst_board_re_seq > #{qst_board_re_seq}
	</update>
		
	<!-- 답글 달기 -->
	<insert id="insertQstReplyBoard">
	    <selectKey keyProperty="qst_idx" resultType="int" order="BEFORE">
	        SELECT IFNULL(MAX(qst_idx), 0) + 1 FROM qst_board
	    </selectKey>
	        INSERT INTO qst_board
	        VALUES (
	            #{qst_idx} + 1
	            , #{mem_idx}
	            , #{mem_name}
	            , #{qst_pass}
	            , #{qst_subject}
	            , #{qst_content}
	            , #{qst_board_re_ref}
	            , #{qst_board_re_lev} + 1
	            , #{qst_board_re_seq} + 1
	            , 0                
	            , now()
	            , #{qst_type}      
	        )
	</insert>
	<!-- 답글을 달려고하는 게시물의 qst_board_re_ref 셀렉  -->
    <select id="selectCurrentQstBoardQstIdx" resultType="int">
	    SELECT qst_board_re_ref 
	    	FROM qst_board 
	    	WHERE qst_idx = #{qst_idx}
    </select>
	
	<update id="updateQstBoard">
		UPDATE qst_board
			SET
				qst_type = #{qst_type}
				, mem_name = #{mem_name}
				, qst_pass = #{qst_pass}
				, qst_subject = #{qst_subject}
				, qst_content = #{qst_content}
			WHERE
				qst_idx = #{qst_idx}
	</update>
	
</mapper>
